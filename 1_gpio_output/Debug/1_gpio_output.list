
1_gpio_output.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000324  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000454  0800045c  0001045c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000454  08000454  0001045c  2**0
                  CONTENTS
  4 .ARM          00000000  08000454  08000454  0001045c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000454  0800045c  0001045c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000454  08000454  00010454  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000458  08000458  00010458  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001045c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800045c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800045c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0001045c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000626  00000000  00000000  00010485  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000002a2  00000000  00000000  00010aab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000080  00000000  00000000  00010d50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000058  00000000  00000000  00010dd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000100bb  00000000  00000000  00010e28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000b19  00000000  00000000  00020ee3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0005462e  00000000  00000000  000219fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0007602a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000010c  00000000  00000000  00076080  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	0800043c 	.word	0x0800043c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	0800043c 	.word	0x0800043c

08000170 <HAL_Init_PIN>:
#include "HAL_Gpio.h"

/*Will be updated With Interrupts Soon*/

void HAL_Init_PIN(GPIO_TypeDef *GPIO_PORT,GPIO_t *GPIO_PIN)
{
 8000170:	b480      	push	{r7}
 8000172:	b087      	sub	sp, #28
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
 8000178:	6039      	str	r1, [r7, #0]
	uint32_t Pin_Number=((uint32_t)GPIO_PIN->PIN);
 800017a:	683b      	ldr	r3, [r7, #0]
 800017c:	689b      	ldr	r3, [r3, #8]
 800017e:	613b      	str	r3, [r7, #16]
	uint32_t REG_VAL=0x00;
 8000180:	2300      	movs	r3, #0
 8000182:	617b      	str	r3, [r7, #20]
	volatile uint32_t *CONFIG_REG=NULL;
 8000184:	2300      	movs	r3, #0
 8000186:	60fb      	str	r3, [r7, #12]
	uint32_t RegisterOffset=0x00;
 8000188:	2300      	movs	r3, #0
 800018a:	60bb      	str	r3, [r7, #8]

	/*Enable Perripheral CLK through RCC Registers*/

	if(GPIO_PORT==GPIOA)
 800018c:	687b      	ldr	r3, [r7, #4]
 800018e:	4a5c      	ldr	r2, [pc, #368]	; (8000300 <HAL_Init_PIN+0x190>)
 8000190:	4293      	cmp	r3, r2
 8000192:	d106      	bne.n	80001a2 <HAL_Init_PIN+0x32>
	{
		__HAL_RCC_GPIOA_EN();
 8000194:	4b5b      	ldr	r3, [pc, #364]	; (8000304 <HAL_Init_PIN+0x194>)
 8000196:	699b      	ldr	r3, [r3, #24]
 8000198:	4a5a      	ldr	r2, [pc, #360]	; (8000304 <HAL_Init_PIN+0x194>)
 800019a:	f043 0304 	orr.w	r3, r3, #4
 800019e:	6193      	str	r3, [r2, #24]
 80001a0:	e02a      	b.n	80001f8 <HAL_Init_PIN+0x88>
	}else if(GPIO_PORT==GPIOB)
 80001a2:	687b      	ldr	r3, [r7, #4]
 80001a4:	4a58      	ldr	r2, [pc, #352]	; (8000308 <HAL_Init_PIN+0x198>)
 80001a6:	4293      	cmp	r3, r2
 80001a8:	d106      	bne.n	80001b8 <HAL_Init_PIN+0x48>
	{
		__HAL_RCC_GPIOB_EN();
 80001aa:	4b56      	ldr	r3, [pc, #344]	; (8000304 <HAL_Init_PIN+0x194>)
 80001ac:	699b      	ldr	r3, [r3, #24]
 80001ae:	4a55      	ldr	r2, [pc, #340]	; (8000304 <HAL_Init_PIN+0x194>)
 80001b0:	f043 0308 	orr.w	r3, r3, #8
 80001b4:	6193      	str	r3, [r2, #24]
 80001b6:	e01f      	b.n	80001f8 <HAL_Init_PIN+0x88>
	}else if(GPIO_PORT==GPIOC)
 80001b8:	687b      	ldr	r3, [r7, #4]
 80001ba:	4a54      	ldr	r2, [pc, #336]	; (800030c <HAL_Init_PIN+0x19c>)
 80001bc:	4293      	cmp	r3, r2
 80001be:	d106      	bne.n	80001ce <HAL_Init_PIN+0x5e>
	{
		__HAL_RCC_GPIOC_EN();
 80001c0:	4b50      	ldr	r3, [pc, #320]	; (8000304 <HAL_Init_PIN+0x194>)
 80001c2:	699b      	ldr	r3, [r3, #24]
 80001c4:	4a4f      	ldr	r2, [pc, #316]	; (8000304 <HAL_Init_PIN+0x194>)
 80001c6:	f043 0310 	orr.w	r3, r3, #16
 80001ca:	6193      	str	r3, [r2, #24]
 80001cc:	e014      	b.n	80001f8 <HAL_Init_PIN+0x88>
	}else if(GPIO_PORT==GPIOD)
 80001ce:	687b      	ldr	r3, [r7, #4]
 80001d0:	4a4f      	ldr	r2, [pc, #316]	; (8000310 <HAL_Init_PIN+0x1a0>)
 80001d2:	4293      	cmp	r3, r2
 80001d4:	d106      	bne.n	80001e4 <HAL_Init_PIN+0x74>
	{
		__HAL_RCC_GPIOD_EN();
 80001d6:	4b4b      	ldr	r3, [pc, #300]	; (8000304 <HAL_Init_PIN+0x194>)
 80001d8:	699b      	ldr	r3, [r3, #24]
 80001da:	4a4a      	ldr	r2, [pc, #296]	; (8000304 <HAL_Init_PIN+0x194>)
 80001dc:	f043 0320 	orr.w	r3, r3, #32
 80001e0:	6193      	str	r3, [r2, #24]
 80001e2:	e009      	b.n	80001f8 <HAL_Init_PIN+0x88>
	}else if(GPIO_PORT==GPIOE)
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	4a4b      	ldr	r2, [pc, #300]	; (8000314 <HAL_Init_PIN+0x1a4>)
 80001e8:	4293      	cmp	r3, r2
 80001ea:	d105      	bne.n	80001f8 <HAL_Init_PIN+0x88>
	{
		__HAL_RCC_GPIOE_EN();
 80001ec:	4b45      	ldr	r3, [pc, #276]	; (8000304 <HAL_Init_PIN+0x194>)
 80001ee:	699b      	ldr	r3, [r3, #24]
 80001f0:	4a44      	ldr	r2, [pc, #272]	; (8000304 <HAL_Init_PIN+0x194>)
 80001f2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80001f6:	6193      	str	r3, [r2, #24]
	}else{

	}
	/**Set status of PIN*/
	if( Pin_Number != 0x00U)
 80001f8:	693b      	ldr	r3, [r7, #16]
 80001fa:	2b00      	cmp	r3, #0
 80001fc:	d07b      	beq.n	80002f6 <HAL_Init_PIN+0x186>
	{
		switch(GPIO_PIN->Mode)
 80001fe:	683b      	ldr	r3, [r7, #0]
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	3b01      	subs	r3, #1
 8000204:	2b05      	cmp	r3, #5
 8000206:	d84e      	bhi.n	80002a6 <HAL_Init_PIN+0x136>
 8000208:	a201      	add	r2, pc, #4	; (adr r2, 8000210 <HAL_Init_PIN+0xa0>)
 800020a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800020e:	bf00      	nop
 8000210:	08000229 	.word	0x08000229
 8000214:	08000231 	.word	0x08000231
 8000218:	0800023b 	.word	0x0800023b
 800021c:	08000245 	.word	0x08000245
 8000220:	0800024f 	.word	0x0800024f
 8000224:	080002a1 	.word	0x080002a1
		{
			case HAL_GPIO_OUT_PP:
				REG_VAL=HAL_GPIO_OUT_PP_MSK+(GPIO_PIN->SPEED);
 8000228:	683b      	ldr	r3, [r7, #0]
 800022a:	685b      	ldr	r3, [r3, #4]
 800022c:	617b      	str	r3, [r7, #20]
				break;
 800022e:	e03d      	b.n	80002ac <HAL_Init_PIN+0x13c>
			case HAL_GPIO_OUT_OD:
				REG_VAL=HAL_GPIO_OUT_OD_MSK	+(GPIO_PIN->SPEED);
 8000230:	683b      	ldr	r3, [r7, #0]
 8000232:	685b      	ldr	r3, [r3, #4]
 8000234:	3304      	adds	r3, #4
 8000236:	617b      	str	r3, [r7, #20]
				break;
 8000238:	e038      	b.n	80002ac <HAL_Init_PIN+0x13c>
			case HAL_GPIO_OUT_ALT_PP:
				REG_VAL=HAL_GPIO_OUT_ALTPP_MSK+(GPIO_PIN->SPEED);
 800023a:	683b      	ldr	r3, [r7, #0]
 800023c:	685b      	ldr	r3, [r3, #4]
 800023e:	3308      	adds	r3, #8
 8000240:	617b      	str	r3, [r7, #20]
				break;
 8000242:	e033      	b.n	80002ac <HAL_Init_PIN+0x13c>
			case HAL_GPIO_OUT_ALT_OD:
				REG_VAL=HAL_GPIO_OUT_ALTOD_MSK+(GPIO_PIN->SPEED);
 8000244:	683b      	ldr	r3, [r7, #0]
 8000246:	685b      	ldr	r3, [r3, #4]
 8000248:	330c      	adds	r3, #12
 800024a:	617b      	str	r3, [r7, #20]
				break;
 800024c:	e02e      	b.n	80002ac <HAL_Init_PIN+0x13c>
			case HAL_GPIO_IN:
				switch(GPIO_PIN->PULL)
 800024e:	683b      	ldr	r3, [r7, #0]
 8000250:	68db      	ldr	r3, [r3, #12]
 8000252:	2b02      	cmp	r3, #2
 8000254:	d016      	beq.n	8000284 <HAL_Init_PIN+0x114>
 8000256:	2b02      	cmp	r3, #2
 8000258:	d827      	bhi.n	80002aa <HAL_Init_PIN+0x13a>
 800025a:	2b00      	cmp	r3, #0
 800025c:	d002      	beq.n	8000264 <HAL_Init_PIN+0xf4>
 800025e:	2b01      	cmp	r3, #1
 8000260:	d003      	beq.n	800026a <HAL_Init_PIN+0xfa>
					case HAL_GPIO_PULLDOWN:
						REG_VAL=HAL_GPIO_IN_MSK+HAL_GPIO_IN_PULLUP_MSK;
						SET_BIT(GPIO_PORT->BRR,(uint32_t)GPIO_PIN->PIN);
						break;
				}
				break;
 8000262:	e022      	b.n	80002aa <HAL_Init_PIN+0x13a>
						REG_VAL=HAL_GPIO_IN_MSK+HAL_GPIO_IN_NO_PULL_MSK;
 8000264:	2304      	movs	r3, #4
 8000266:	617b      	str	r3, [r7, #20]
						break;
 8000268:	e019      	b.n	800029e <HAL_Init_PIN+0x12e>
						REG_VAL=HAL_GPIO_IN_MSK+HAL_GPIO_IN_PULLD_MSK;
 800026a:	230c      	movs	r3, #12
 800026c:	617b      	str	r3, [r7, #20]
						SET_BIT(GPIO_PORT->BSRR,(uint32_t)GPIO_PIN->PIN);
 800026e:	687b      	ldr	r3, [r7, #4]
 8000270:	691a      	ldr	r2, [r3, #16]
 8000272:	683b      	ldr	r3, [r7, #0]
 8000274:	689b      	ldr	r3, [r3, #8]
 8000276:	2101      	movs	r1, #1
 8000278:	fa01 f303 	lsl.w	r3, r1, r3
 800027c:	431a      	orrs	r2, r3
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	611a      	str	r2, [r3, #16]
						break;
 8000282:	e00c      	b.n	800029e <HAL_Init_PIN+0x12e>
						REG_VAL=HAL_GPIO_IN_MSK+HAL_GPIO_IN_PULLUP_MSK;
 8000284:	230c      	movs	r3, #12
 8000286:	617b      	str	r3, [r7, #20]
						SET_BIT(GPIO_PORT->BRR,(uint32_t)GPIO_PIN->PIN);
 8000288:	687b      	ldr	r3, [r7, #4]
 800028a:	695a      	ldr	r2, [r3, #20]
 800028c:	683b      	ldr	r3, [r7, #0]
 800028e:	689b      	ldr	r3, [r3, #8]
 8000290:	2101      	movs	r1, #1
 8000292:	fa01 f303 	lsl.w	r3, r1, r3
 8000296:	431a      	orrs	r2, r3
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	615a      	str	r2, [r3, #20]
						break;
 800029c:	bf00      	nop
				break;
 800029e:	e004      	b.n	80002aa <HAL_Init_PIN+0x13a>
			case HAL_GPIO_IN_AN:
				REG_VAL=HAL_GPIO_IN_AN_MSK+HAL_GPIO_IN_MSK;
 80002a0:	2300      	movs	r3, #0
 80002a2:	617b      	str	r3, [r7, #20]
				break;
 80002a4:	e002      	b.n	80002ac <HAL_Init_PIN+0x13c>
			default:
				break;
 80002a6:	bf00      	nop
 80002a8:	e000      	b.n	80002ac <HAL_Init_PIN+0x13c>
				break;
 80002aa:	bf00      	nop
		}
		/*Select Either CRH or CRL depending on position of the bit*/
		CONFIG_REG=Pin_Number>8?&GPIO_PORT->CRH:&GPIO_PORT->CRL;
 80002ac:	693b      	ldr	r3, [r7, #16]
 80002ae:	2b08      	cmp	r3, #8
 80002b0:	d902      	bls.n	80002b8 <HAL_Init_PIN+0x148>
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	3304      	adds	r3, #4
 80002b6:	e000      	b.n	80002ba <HAL_Init_PIN+0x14a>
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	60fb      	str	r3, [r7, #12]

		/*Determine Bit offset if the pin number is greater simply subtract and multiply by 4 or left shift by 2 2^2=4 */
		RegisterOffset=Pin_Number>8?((Pin_Number-8)<<2U):((Pin_Number)<<2U);
 80002bc:	693b      	ldr	r3, [r7, #16]
 80002be:	2b08      	cmp	r3, #8
 80002c0:	d903      	bls.n	80002ca <HAL_Init_PIN+0x15a>
 80002c2:	693b      	ldr	r3, [r7, #16]
 80002c4:	3b08      	subs	r3, #8
 80002c6:	009b      	lsls	r3, r3, #2
 80002c8:	e001      	b.n	80002ce <HAL_Init_PIN+0x15e>
 80002ca:	693b      	ldr	r3, [r7, #16]
 80002cc:	009b      	lsls	r3, r3, #2
 80002ce:	60bb      	str	r3, [r7, #8]

		/*Clear Bits of Certain Pin*/
		(*CONFIG_REG)&=~(CLEAR_MASK_GPIO<<RegisterOffset);
 80002d0:	68fb      	ldr	r3, [r7, #12]
 80002d2:	681a      	ldr	r2, [r3, #0]
 80002d4:	210f      	movs	r1, #15
 80002d6:	68bb      	ldr	r3, [r7, #8]
 80002d8:	fa01 f303 	lsl.w	r3, r1, r3
 80002dc:	43db      	mvns	r3, r3
 80002de:	401a      	ands	r2, r3
 80002e0:	68fb      	ldr	r3, [r7, #12]
 80002e2:	601a      	str	r2, [r3, #0]

		/*Set Bits of Certain Pin*/
		(*CONFIG_REG)|=(REG_VAL<<RegisterOffset);
 80002e4:	68fb      	ldr	r3, [r7, #12]
 80002e6:	681a      	ldr	r2, [r3, #0]
 80002e8:	6979      	ldr	r1, [r7, #20]
 80002ea:	68bb      	ldr	r3, [r7, #8]
 80002ec:	fa01 f303 	lsl.w	r3, r1, r3
 80002f0:	431a      	orrs	r2, r3
 80002f2:	68fb      	ldr	r3, [r7, #12]
 80002f4:	601a      	str	r2, [r3, #0]
	}
}
 80002f6:	bf00      	nop
 80002f8:	371c      	adds	r7, #28
 80002fa:	46bd      	mov	sp, r7
 80002fc:	bc80      	pop	{r7}
 80002fe:	4770      	bx	lr
 8000300:	40010800 	.word	0x40010800
 8000304:	40021000 	.word	0x40021000
 8000308:	40010c00 	.word	0x40010c00
 800030c:	40011000 	.word	0x40011000
 8000310:	40011400 	.word	0x40011400
 8000314:	40011800 	.word	0x40011800

08000318 <HAL_Toggle_PIN>:
		}
	}
}

void HAL_Toggle_PIN(GPIO_TypeDef *GPIO_PORT,GPIO_t *GPIO_PIN)
{
 8000318:	b480      	push	{r7}
 800031a:	b083      	sub	sp, #12
 800031c:	af00      	add	r7, sp, #0
 800031e:	6078      	str	r0, [r7, #4]
 8000320:	6039      	str	r1, [r7, #0]
	if (GPIO_PORT != NULL && GPIO_PIN != NULL) {
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	2b00      	cmp	r3, #0
 8000326:	d00c      	beq.n	8000342 <HAL_Toggle_PIN+0x2a>
 8000328:	683b      	ldr	r3, [r7, #0]
 800032a:	2b00      	cmp	r3, #0
 800032c:	d009      	beq.n	8000342 <HAL_Toggle_PIN+0x2a>
		GPIO_PORT->ODR^=(1U<<(uint32_t)GPIO_PIN->PIN);
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	68da      	ldr	r2, [r3, #12]
 8000332:	683b      	ldr	r3, [r7, #0]
 8000334:	689b      	ldr	r3, [r3, #8]
 8000336:	2101      	movs	r1, #1
 8000338:	fa01 f303 	lsl.w	r3, r1, r3
 800033c:	405a      	eors	r2, r3
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	60da      	str	r2, [r3, #12]
	}
}
 8000342:	bf00      	nop
 8000344:	370c      	adds	r7, #12
 8000346:	46bd      	mov	sp, r7
 8000348:	bc80      	pop	{r7}
 800034a:	4770      	bx	lr

0800034c <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 800034c:	b580      	push	{r7, lr}
 800034e:	b086      	sub	sp, #24
 8000350:	af00      	add	r7, sp, #0
    /* Loop forever */
	GPIO_t GPIO_InitStruct = {0};
 8000352:	1d3b      	adds	r3, r7, #4
 8000354:	2200      	movs	r2, #0
 8000356:	601a      	str	r2, [r3, #0]
 8000358:	605a      	str	r2, [r3, #4]
 800035a:	609a      	str	r2, [r3, #8]
 800035c:	60da      	str	r2, [r3, #12]
	GPIO_InitStruct.PIN = GPIO_PIN_5;
 800035e:	2305      	movs	r3, #5
 8000360:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Mode = HAL_GPIO_OUT_PP;
 8000362:	2301      	movs	r3, #1
 8000364:	607b      	str	r3, [r7, #4]
	GPIO_InitStruct.PULL = HAL_GPIO_NOPULL;
 8000366:	2300      	movs	r3, #0
 8000368:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.SPEED = HAL_GPIO_SPEED_FREQ_LOW;
 800036a:	2302      	movs	r3, #2
 800036c:	60bb      	str	r3, [r7, #8]
	HAL_Init_PIN(GPIOB,&GPIO_InitStruct);
 800036e:	1d3b      	adds	r3, r7, #4
 8000370:	4619      	mov	r1, r3
 8000372:	4809      	ldr	r0, [pc, #36]	; (8000398 <main+0x4c>)
 8000374:	f7ff fefc 	bl	8000170 <HAL_Init_PIN>
	while(1)
	{
		HAL_Toggle_PIN(GPIOB,&GPIO_InitStruct);
 8000378:	1d3b      	adds	r3, r7, #4
 800037a:	4619      	mov	r1, r3
 800037c:	4806      	ldr	r0, [pc, #24]	; (8000398 <main+0x4c>)
 800037e:	f7ff ffcb 	bl	8000318 <HAL_Toggle_PIN>
		for(uint32_t i=0;i<=500000;i++);
 8000382:	2300      	movs	r3, #0
 8000384:	617b      	str	r3, [r7, #20]
 8000386:	e002      	b.n	800038e <main+0x42>
 8000388:	697b      	ldr	r3, [r7, #20]
 800038a:	3301      	adds	r3, #1
 800038c:	617b      	str	r3, [r7, #20]
 800038e:	697b      	ldr	r3, [r7, #20]
 8000390:	4a02      	ldr	r2, [pc, #8]	; (800039c <main+0x50>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d9f8      	bls.n	8000388 <main+0x3c>
		HAL_Toggle_PIN(GPIOB,&GPIO_InitStruct);
 8000396:	e7ef      	b.n	8000378 <main+0x2c>
 8000398:	40010c00 	.word	0x40010c00
 800039c:	0007a120 	.word	0x0007a120

080003a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003a0:	480d      	ldr	r0, [pc, #52]	; (80003d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003a2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80003a4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003a8:	480c      	ldr	r0, [pc, #48]	; (80003dc <LoopForever+0x6>)
  ldr r1, =_edata
 80003aa:	490d      	ldr	r1, [pc, #52]	; (80003e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003ac:	4a0d      	ldr	r2, [pc, #52]	; (80003e4 <LoopForever+0xe>)
  movs r3, #0
 80003ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003b0:	e002      	b.n	80003b8 <LoopCopyDataInit>

080003b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003b6:	3304      	adds	r3, #4

080003b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003bc:	d3f9      	bcc.n	80003b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003be:	4a0a      	ldr	r2, [pc, #40]	; (80003e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003c0:	4c0a      	ldr	r4, [pc, #40]	; (80003ec <LoopForever+0x16>)
  movs r3, #0
 80003c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003c4:	e001      	b.n	80003ca <LoopFillZerobss>

080003c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003c8:	3204      	adds	r2, #4

080003ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003cc:	d3fb      	bcc.n	80003c6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003ce:	f000 f811 	bl	80003f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003d2:	f7ff ffbb 	bl	800034c <main>

080003d6 <LoopForever>:

LoopForever:
    b LoopForever
 80003d6:	e7fe      	b.n	80003d6 <LoopForever>
  ldr   r0, =_estack
 80003d8:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80003dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003e0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80003e4:	0800045c 	.word	0x0800045c
  ldr r2, =_sbss
 80003e8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80003ec:	2000001c 	.word	0x2000001c

080003f0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003f0:	e7fe      	b.n	80003f0 <ADC1_2_IRQHandler>
	...

080003f4 <__libc_init_array>:
 80003f4:	b570      	push	{r4, r5, r6, lr}
 80003f6:	2600      	movs	r6, #0
 80003f8:	4d0c      	ldr	r5, [pc, #48]	; (800042c <__libc_init_array+0x38>)
 80003fa:	4c0d      	ldr	r4, [pc, #52]	; (8000430 <__libc_init_array+0x3c>)
 80003fc:	1b64      	subs	r4, r4, r5
 80003fe:	10a4      	asrs	r4, r4, #2
 8000400:	42a6      	cmp	r6, r4
 8000402:	d109      	bne.n	8000418 <__libc_init_array+0x24>
 8000404:	f000 f81a 	bl	800043c <_init>
 8000408:	2600      	movs	r6, #0
 800040a:	4d0a      	ldr	r5, [pc, #40]	; (8000434 <__libc_init_array+0x40>)
 800040c:	4c0a      	ldr	r4, [pc, #40]	; (8000438 <__libc_init_array+0x44>)
 800040e:	1b64      	subs	r4, r4, r5
 8000410:	10a4      	asrs	r4, r4, #2
 8000412:	42a6      	cmp	r6, r4
 8000414:	d105      	bne.n	8000422 <__libc_init_array+0x2e>
 8000416:	bd70      	pop	{r4, r5, r6, pc}
 8000418:	f855 3b04 	ldr.w	r3, [r5], #4
 800041c:	4798      	blx	r3
 800041e:	3601      	adds	r6, #1
 8000420:	e7ee      	b.n	8000400 <__libc_init_array+0xc>
 8000422:	f855 3b04 	ldr.w	r3, [r5], #4
 8000426:	4798      	blx	r3
 8000428:	3601      	adds	r6, #1
 800042a:	e7f2      	b.n	8000412 <__libc_init_array+0x1e>
 800042c:	08000454 	.word	0x08000454
 8000430:	08000454 	.word	0x08000454
 8000434:	08000454 	.word	0x08000454
 8000438:	08000458 	.word	0x08000458

0800043c <_init>:
 800043c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800043e:	bf00      	nop
 8000440:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000442:	bc08      	pop	{r3}
 8000444:	469e      	mov	lr, r3
 8000446:	4770      	bx	lr

08000448 <_fini>:
 8000448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800044a:	bf00      	nop
 800044c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800044e:	bc08      	pop	{r3}
 8000450:	469e      	mov	lr, r3
 8000452:	4770      	bx	lr
